# develop environment
# 服务配置
server:
  ## 端口
  port: 9999
  servlet:
    context-path: /authorization-server

# Slf4j 日志配置
#-> 配置项参见 <jar>org.springframework.boot.context.logging.LoggingApplicationListener</jar>
#-> @Reference
#-> <a href="https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/context/logging/LoggingApplicationListener.html">
#->     LoggingApplicationListener (Spring Boot Docs 2.2.2.RELEASE API)</a>
#-> , <a href="https://docs.spring.io/spring-boot/docs/1.5.6.RELEASE/reference/htmlsingle/#boot-features-logging">
#->     26. Logging</a>
logging:
  ## 输出级别
  level:
    com.favorites: DEBUG
    org.hibernate: ERROR
    org.springframework.web: INFO
    github.com.suitelhy.dingding.domain.repository.*: DEBUG
  ## @Reference <jar>org.springframework.boot.logging.LogFile</jar>
  file:
    ### ↓ (建议使用) 将会在项目路径下的<relativePath>/output/log/dingding</relativePath>之下生成<file>dingding.log</file>.
    name: ./output/log/dingding/dingding.log

# 项目个性化配置
dingding:
  ## 数据源配置
  ##-> TIPS: 个性化配置不应该与 Spring 等开发框架共用同一个命名空间, 故迁移.
  datasource:
    ### 主数据源
    user:
      driver-class-name: com.mysql.cj.jdbc.Driver
      # Spring Boot 2.xx 将默认的JDBC连接池从Tomcat更改为更快更好的HikariCP, 导致<item>url</item>需要改为<item>jdbc-url</item>
      jdbc-url: jdbc:mysql://localhost:3306/dingding?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8&useSSL=false
      username: User
      password: 123456
    ### 测试用的数据源
    test:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://localhost:3306/test?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8&useSSL=false
      username: User
      password: 123456

# Spring 生态 - 配置
spring:
  data:
  ## 开发环境关闭 Thymeleaf 的缓存
  thymeleaf:
    cache: false
    ### @Reference <a href="https://stackoverflow.com/questions/28624768/thymeleaf-strict-html-parsing-issue">
    ###->     Thymeleaf - Strict HTML parsing issue - Stack Overflow</a>
    mode: LEGACYHTML5
  datasource:
    dbcp2:
      ### 开发环境关缓存
      cache-state: off
