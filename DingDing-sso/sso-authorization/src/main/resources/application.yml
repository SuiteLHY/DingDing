dubbo:
  cloud:
    # 用于服务消费方订阅服务提供方的应用名称的列表. (多个应用使用{@code ,}分隔. 不推荐使用默认值{@code *}, 此时将订阅所有应用.)
    subscribed-services: dingding-log-service-provider,dingding-security-service-provider,dingding-user-service-provider

# Spring 配置
spring:
  application:
    # Spring 应用名称
    name: dingding-sso-authorization
  main:
    # Spring 容器的 Bean 覆盖方式 (在 Spring Boot 2.1 及以上版本增加该设定)
    allow-bean-definition-overriding: true
#  ## Spring Data JPA
#  ##-> <a href="https://blog.csdn.net/WZH577/article/details/99698187">Hibernate数据库配置项中命名策略说明</a>
#  jpa:
#    #    hibernate:
#    #      # 【踩坑】Spring-Boot-2.2.x-Release: Spring Boot允许 Hibernate 选择要使用的方言，而不是根据检测到的数据库应用默认方言。
#    #      #-> 也就是说,，以前配置了方言，现在版本中要删除这些自定义项 (方言由 Hibernate 进行适配)。
#    #      dialect: org.hibernate.dialect.MySQL5InnoDBDialect
#    #      ddl-auto: none
#    #    show-sql: true
#    #    open-in-view: true
#    #    # Hibernate (Hibernate 5) 能够自行适配数据库方言以后, Spring boot 配置只能指定数据库及其平台
#    #    database: mysql
#    database: mysql
#    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
#    hibernate:
#      ### @Description 设计: 数据库结构不应该被框架操作
#      ddl-auto: none
#      ### @Tips 策略配置参照相应接口实现类的 API Docs (<class>SpringImplicitNamingStrategy</class>的实现有点坑)
#      naming:
#        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
#        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
#    properties:
#      format_sql: true
#    show-sql: true
#    open-in-view: true
  mvc:
    ### 配置静态资源访问前缀
    ###-> @Reference <class>org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties</class>
    static-path-pattern: /static/**
  ## 加载 dev 环境配置
  profiles:
    active: dev
    include: security
  ## 配置静态资源路径 (默认配置失效)
  resources:
    static-locations[0]: classpath:/static/
