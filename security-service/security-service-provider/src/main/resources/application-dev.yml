# develop environment

# 项目个性化配置
dingding:
  # 数据源配置
  #-> TIPS: 个性化配置不应该与 Spring 等开发框架共用同一个命名空间, 故迁移.
  datasource:
    # 主数据源
    user:
      driver-class-name: com.mysql.cj.jdbc.Driver
      # Spring Boot 2.xx 将默认的JDBC连接池从Tomcat更改为更快更好的HikariCP, 导致<item>url</item>需要改为<item>jdbc-url</item>
      jdbc-url: jdbc:mysql://localhost:3306/dingding?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8&useSSL=false
      username: User
      password: 123456
    # 测试用的数据源
    test:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://localhost:3306/test?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8&useSSL=false
      username: User
      password: 123456
  # Domain 层配置
  domain:
    vo:
      init_persistence: true

dubbo:
  protocol:
#    id: ${dubbo.application.name}
    # Dubbo 协议
    name: dubbo
    # Dubbo 协议端口（-1 表示自增端口，从 20880 开始）
    port: 20880
#    # Dubbo 序列化方式
#    serialization: kryo
  # Dubbo 服务注册中心相关配置
  registry:
    # 本地服务挂载到 Spring Cloud 服务注册中心
    address: spring-cloud://localhost
  scan:
    # Dubbo 服务扫描基准包
    base-packages: github.com.suitelhy.dingding.security.service.provider.domain.service.api

# Slf4j 日志配置
#-> 配置项参见 <jar>org.springframework.boot.context.logging.LoggingApplicationListener</jar>
#-> @Reference
#-> {@link <a href="https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/context/logging/LoggingApplicationListener.html">LoggingApplicationListener (Spring Boot Docs 2.2.2.RELEASE API)</a>}
#-> {@link <a href="https://docs.spring.io/spring-boot/docs/1.5.6.RELEASE/reference/htmlsingle/#boot-features-logging">26. Logging</a>}
logging:
  # 输出级别
  level:
    com.favorites: DEBUG
    org.hibernate: ERROR
    org.springframework.web: DEBUG
  # {@Reference <jar>org.springframework.boot.logging.LogFile</jar>}
  file:
    # ↓ (建议使用) 将会在项目路径下的<relativePath>/output/log/dingding</relativePath>之下生成<file>dingding.log</file>.
    name: ./output/log/dingding/dingding.log

#management:
#  endpoints:
#    web:
#      exposure:
#        include: *

server:
  port: 8001

# Spring 生态 - 配置
spring:
  cloud:
    nacos:
      # 使用 Nacos 实现的 Spring Cloud 服务配置中心
      config:
        # 服务对应的 {@code Data ID} 的前缀
        prefix: ${spring.application.name}
        # 服务器地址
        server-addr: 127.0.0.1:8848
      # 使用 Nacos 实现的 Spring Cloud 服务发现与注册中心
      discovery:
        # Nacos 服务器地址
        server-addr: 127.0.0.1:8848
  datasource:
    dbcp2:
      # 开发环境关缓存
      cache-state: off
    # {@Reference <a href="https://www.cnblogs.com/han200113/p/12092585.html">Failed to bind properties under '' to com.zaxxer.hikari.Hikari  DataSource Spring Boot解决方案 - 看远看近 - 博客园</a>}
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/dingding?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8&useSSL=false
    username: User
    password: 123456
  ## Spring Data JPA
  ##-> <a href="https://blog.csdn.net/WZH577/article/details/99698187">Hibernate数据库配置项中命名策略说明</a>
  jpa:
    #    hibernate:
    #      # 【踩坑】Spring-Boot-2.2.x-Release: Spring Boot允许 Hibernate 选择要使用的方言，而不是根据检测到的数据库应用默认方言。
    #      #-> 也就是说,，以前配置了方言，现在版本中要删除这些自定义项 (方言由 Hibernate 进行适配)。
    #      dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    #      ddl-auto: none
    #    show-sql: true
    #    open-in-view: true
    #    # Hibernate (Hibernate 5) 能够自行适配数据库方言以后, Spring boot 配置只能指定数据库及其平台
    #    database: mysql
    database: mysql
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    hibernate:
      ### @Description 设计: 数据库结构不应该被框架操作
      ddl-auto: none
      ### @Tips 策略配置参照相应接口实现类的 API Docs (<class>SpringImplicitNamingStrategy</class>的实现有点坑)
      naming:
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
    properties:
      format_sql: true
    show-sql: true
    open-in-view: true
  # 开发环境关闭 Thymeleaf 的缓存
  thymeleaf:
    cache: false
    # {@Reference <a href="https://stackoverflow.com/questions/28624768/thymeleaf-strict-html-parsing-issue">Thymeleaf - Strict HTML parsing issue - Stack Overflow</a>}
    mode: LEGACYHTML5
